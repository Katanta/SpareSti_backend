# Define stages

stages:
  - build
  - linting
  - test
  - deploy

default:
  # Cache maven docker image in GitLab
  image: ${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/maven:latest
  cache:
    key: $CI_COMMIT_REF_SLUG
    paths:
      - .m2/

# Define variables
variables:
  MAVEN_OPTS: >-
    -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository
  MAVEN_BUILD_CLI_OPTS: >-
    -DskipTests -Dspotless.check.skip=true
  MAVEN_TEST_CLI_OPTS: >-
    -Dspotless.check.skip=true
    

build:
  stage: build
  script:
    - mvn $MAVEN_BUILD_CLI_OPTS package
  artifacts:
    paths:


test:
  stage: test
  script:
    - mvn $MAVEN_TEST_CLI_OPTS test
  retry: 1

linting:
  stage: linting
  script:
    - mvn spotless:check

generatepdf:
  image: ubuntu:20.04
  stage: build
  script:
    - apt-get update
    - apt-get install -y wget
    - apt-get install -y fontconfig libfreetype6 libjpeg-turbo8 libpng16-16 libx11-6 libxcb1 libxext6 libxrender1 xfonts-75dpi xfonts-base
    - wget https://github.com/wkhtmltopdf/packaging/releases/download/0.12.6-1/wkhtmltox_0.12.6-1.focal_amd64.deb
    - dpkg -i wkhtmltox_0.12.6-1.focal_amd64.deb
    - apt-get -y install nodejs
    - apt-get -y install npm
    - npm install -g github-wikito-converter
    - apt-get -y install git
    - export my_url="${CI_PROJECT_URL:8}"
    - export final_url="https://gitlab-ci-token:$CI_JOB_TOKEN@$my_url"
    - git clone "$final_url.wiki.git"
    - gwtc $CI_PROJECT_NAME.wiki
    - wkhtmltopdf documentation.html wiki.pdf
  artifacts:
    paths:
      - wiki.pdf
  only:
    - web

pages:
  stage: build
  script:
    - mvn clean package
    - mvn javadoc:javadoc
    - mkdir .public
    - cp -rf target/site/jacoco/* .public
    - cp -rf target/site/apidocs/* .public
    - mv -f .public public
  artifacts:
    paths:
      - public
  only:
    - web

deploy:
  stage: deploy
  image: docker:latest
  tags:
    - dind
  services:
    - name: docker:dind
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_IMAGE_NAME: $CI_REGISTRY_USER/idatt2106_2024_02_backend-app:production
    DOCKER_TLS_CERTDIR: ""
    DOCKER_HOST: tcp://docker:2375
  script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login --username $CI_REGISTRY_USER --password-stdin
    - docker build -t $DOCKER_IMAGE_NAME:latest .
    - docker push $DOCKER_IMAGE_NAME
  only:
    - production
